# Workflow name
name: continuous integration

# Define when to trigger the Workflow
on:
  push:
    branches:
    - create-docker

#jobs to run
jobs:
  build:
    # Name of the job
    name: Build and Test
    # Platform to run the job on
    runs-on: ubuntu-latest
    # Define steps to execute
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: debug message
        run: echo "This is debugging message" 

      # Login to docker
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Debug: List backend directory contents
      # - name: List backend directory contents
      #   run: ls -R ./backend | grep requirement

      # Build and push frontend Docker image    
      - name: Build and push frontend Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend 
          push: true
          file: ./frontend/docker_frontend/DockerFile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/vue-django-frontend:latest

      # Build and push backend Docker image    
      - name: Build and push backend Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./backend 
          push: true
          file: ./backend/docker_backend/DockerFile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/vue-django-backend:latest
          # need to work in cache later to reduce CI/CD time
          # cache-from: type=gha
          # cache-to: type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      env:
        PRIVATE_KEY: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
        HOSTNAME: ${{secrets.AWS_PRIVATE_HOST_IP}}
        USER_NAME: ${{secrets.AWS_USERNAME}}
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # - name: Set permissions for private key
    #   run: |
    #     echo "${{ secrets.AWS_PRIVATE_KEY }}" > key.pem
    #     chmod 600 key.pem
    - name: Checkout public bastion host
      run: |
      echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
      ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME}'

    - name: List items of bastion host
      run: ls


