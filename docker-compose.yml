services:
  backend:
    container_name: backend
    restart: always
    image: ${DOCKER_USERNAME}/${DOCKER_BACKEND_IMAGE}
    command: gunicorn --reload --bind 0.0.0.0:8000 backend.wsgi:application
    ports:
      - 8000:8000
    depends_on:
      - db
      - redis                       # Ensure Redis starts before backend.
    volumes:
      - ./backend/:/usr/src/app/
    networks:
      - app-network

  db:
    container_name: mariadb
    image: mariadb
    restart: always
    environment:
      MARIADB_DATABASE: vuedjango
      MARIADB_HOST: db
      MARIADB_ROOT_PASSWORD: root
      MARIADB_USER: root
      MARIADB_PASSWORD: root
    ports:
      - 3308:3306
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - data-volume:/data
    networks:
      - app-network

  frontend:
    container_name: frontend
    restart: always
    image: ${DOCKER_USERNAME}/${DOCKER_FRONTEND_IMAGE}
    ports:
      - 5173:80
    volumes:
      - ./frontend/frontend:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - app-network
    
  asgi_server:
    container_name: asgi_server
    build: 
      context: ./backend
      dockerfile: docker_backend/DockerFile
    command: daphne -b 0.0.0.0 -p 8001 backend.asgi:application
    ports:
      - 8001:8001
    volumes:
      - ./backend/:/usr/src/app/
    depends_on:
      - redis
    networks:
      - app-network

  celery:
    container_name: celery
    build: 
      context: ./backend
      dockerfile: docker_backend/DockerFile
    command: celery --app=backend worker -l INFO
    volumes:
      - ./backend/:/usr/src/app/
    depends_on:
      - redis
    networks:
      - app-network
  

networks:
  app-network:
    driver: bridge

volumes:
  data-volume:                         # Declare the Redis volume.

